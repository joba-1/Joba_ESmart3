; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
;default_envs = d1_mini_ser
default_envs = mhetesp32minikit_ota

[program]
name = eSmart3
version = 1.0
instance = 1

[influx]
server = job4
port = 8086
database = ${program.name}

[ntp]
server = fritz.box

[syslog]
server = job4
port = 514

[mqtt]
server = job4
port = 1883
user = me
pass = mine
topic = ${program.name}

[env]
framework = arduino
monitor_speed = 115200
lib_extra_dirs = ../../..
lib_ignore = examples
lib_deps = Syslog, https://github.com/tzapu/WiFiManager.git, NTPClient, PubSubClient, Joba_ESmart3
build_flags = 
    -Wall 
    -DPIO_FRAMEWORK_ARDUINO_ENABLE_EXCEPTIONS
    -DVERSION='"${program.version}"'
    -DPROGNAME='"${program.name}"'
    -DHOSTNAME='"${program.name}-${program.instance}"'
    -DBAUDRATE=${env.monitor_speed}
    -DINFLUX_SERVER='"${influx.server}"'
    -DINFLUX_PORT=${influx.port}
    -DINFLUX_DB='"${influx.database}"'
    -DSYSLOG_SERVER='"${syslog.server}"'
    -DSYSLOG_PORT=${syslog.port}
    -DMQTT_SERVER='"${mqtt.server}"'
    -DMQTT_USER='"${mqtt.user}"'
    -DMQTT_PASS='"${mqtt.pass}"'
    -DMQTT_TOPIC='"${mqtt.topic}/${program.instance}"'
    -DMQTT_PORT=${mqtt.port}
    -DNTP_SERVER='"${ntp.server}"'

[env:mhetesp32minikit_ser]
platform = espressif32
board = mhetesp32minikit
monitor_port = /dev/ttyACM0
monitor_filters = esp32_exception_decoder
upload_port = /dev/ttyACM0

[env:mhetesp32minikit_ota]
platform = espressif32
board = mhetesp32minikit
monitor_port = /dev/ttyACM0
monitor_filters = esp32_exception_decoder
extra_scripts = upload_script.py
upload_protocol = custom
upload_port = ${program.name}-${program.instance}/update

[env:d1_mini_ser]
platform = espressif8266
board = d1_mini
monitor_port = /dev/ttyUSB2
monitor_filters = esp8266_exception_decoder
upload_speed = 460800
upload_port = /dev/ttyUSB2

[env:d1_mini_ota]
platform = espressif8266
board = d1_mini
monitor_port = /dev/ttyUSB2
monitor_filters = esp8266_exception_decoder
extra_scripts = upload_script.py
upload_protocol = custom
upload_port = ${program.name}-${program.instance}/update
